/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package componentelistas;

import java.util.List;
import java.util.Arrays;
import java.util.ArrayList;
import javax.swing.DefaultListModel;


/**
 *
 * @
 */
public class Listas2 extends javax.swing.JPanel {

    private DefaultListModel<String> modelDisponibles;
    private DefaultListModel<String> modelSeleccionados;
    /**
     * Creates new form transpasoDatos1
     */
    public Listas2() {
        initComponents();
        inicializarComponente();
    }
    
    private void inicializarComponente() {
        modelDisponibles = new DefaultListModel<>();
        modelSeleccionados = new DefaultListModel<>();
        
        listaDisponibles.setModel(modelDisponibles);
        listaSeleccionados.setModel(modelSeleccionados);
       
    }
    
    //configuracion del componente
    public String[] getDisponibles() {
        String[] items = new String[modelDisponibles.size()];
        for (int i = 0; i < modelDisponibles.size(); i++) {
            items[i] = modelDisponibles.getElementAt(i);
        }
        return items;
    }

    public void setDisponibles(String[] items) {
        modelDisponibles.clear();
        for (String item : items) {
            modelDisponibles.addElement(item);
        }
    }

    public String[] getSeleccionados() {
        String[] items = new String[modelSeleccionados.size()];
        for (int i = 0; i < modelSeleccionados.size(); i++) {
            items[i] = modelSeleccionados.getElementAt(i);
        }
        return items;
    }
    public void SetDisponibleTxt(String titulo){
        disponibleLabel.setText(titulo);        
    }
    public String getDisponibleTxt(){
        return disponibleLabel.getText();
    }
    public void setSeleccionadoTxt(String titulo){
        seleccionadoLabel.setText(titulo);
    }
    public String getSeleccionadoTxt(){
        return seleccionadoLabel.getText();
    }
    public void setSeleccionados(String[] items) {
        modelSeleccionados.clear();
        for (String item : items) {
            modelSeleccionados.addElement(item);
        }
    }
    
//datos del componente
    public void agregarDisponible(String elemento) {
        modelDisponibles.addElement(elemento);
    }

    public void agregarSeleccionado(String elemento) {
        modelSeleccionados.addElement(elemento);
    }

    public List<String> obtenerSeleccionados() {
        return Arrays.asList(getSeleccionados());
    }

    public List<String> obtenerDisponibles() {
        return Arrays.asList(getDisponibles());
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        disponibleLabel = new javax.swing.JLabel();
        seleccionadoLabel = new javax.swing.JLabel();
        btnDisponible = new javax.swing.JButton();
        btnSeleccionar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaDisponibles = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaSeleccionados = new javax.swing.JList<>();

        setMaximumSize(new java.awt.Dimension(450, 280));
        setMinimumSize(new java.awt.Dimension(450, 280));
        setPreferredSize(new java.awt.Dimension(450, 280));

        disponibleLabel.setText("Disponibles");

        seleccionadoLabel.setText("Seleccionados");

        btnDisponible.setText("<---");
        btnDisponible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisponibleActionPerformed(evt);
            }
        });

        btnSeleccionar.setText("--->");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        listaDisponibles.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listaDisponibles);

        jScrollPane1.setViewportView(listaSeleccionados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(disponibleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSeleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                    .addComponent(seleccionadoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(btnSeleccionar)
                        .addGap(40, 40, 40)
                        .addComponent(btnDisponible))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(disponibleLabel)
                            .addComponent(seleccionadoLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDisponibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisponibleActionPerformed
        moverElemento(listaSeleccionados, modelSeleccionados, modelDisponibles);

    }//GEN-LAST:event_btnDisponibleActionPerformed

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        moverElemento(listaDisponibles, modelDisponibles, modelSeleccionados);
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void moverElemento(javax.swing.JList<String> lista, 
                             DefaultListModel<String> origen, 
                             DefaultListModel<String> destino) {
        int index = lista.getSelectedIndex();
        if (index >= 0) {
            destino.addElement(origen.getElementAt(index));
            origen.remove(index);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDisponible;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JLabel disponibleLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listaDisponibles;
    private javax.swing.JList<String> listaSeleccionados;
    private javax.swing.JLabel seleccionadoLabel;
    // End of variables declaration//GEN-END:variables
}
